CREATE DATABASE IF NOT EXISTS paymybuddy;
USE paymybuddy;

DROP TABLE IF EXISTS `user`;
DROP TABLE IF EXISTS `relation`;
DROP TABLE IF EXISTS `sold`;
DROP TABLE IF EXISTS `transaction`;

create table user(
USER_ID integer PRIMARY KEY AUTO_INCREMENT ,
USER_NAME varchar(250) ,
USER_MAIL varchar(250) NOT NULL ,
USER_PASSWORD varchar(250) NOt NULL,
UNIQUE (USER_MAIL)
);

create table relation(
RELATION_ID integer PRIMARY KEY AUTO_INCREMENT,
USER_FK_ID_RELATION integer NOT NULL,
USER_FK_ID_OWNER_RELATION integer NOT NULL,
FOREIGN KEY (USER_FK_ID_RELATION) REFERENCES user(USER_ID),
FOREIGN KEY (USER_FK_ID_OWNER_RELATION) REFERENCES user(USER_ID),
CONSTRAINT CHK_DIFF_USERS CHECK (USER_FK_ID_RELATION != USER_FK_ID_OWNER_RELATION)
);

create table sold(
SOLD_ID integer PRIMARY KEY AUTO_INCREMENT  ,
USER_FK_ID_SOLD integer NOT NULL,
SOLD_SUM double(20,2) DEFAULT 0,
FOREIGN KEY (USER_FK_ID_SOLD) REFERENCES user(USER_ID),
CONSTRAINT CHK_SOLD_NON_NEGATIVE CHECK (SOLD_SUM >= 0)
);

create table transaction(
TRANSACTION_ID integer PRIMARY KEY AUTO_INCREMENT ,
USER_FK_ID_TRANSACTION integer NOT NULL,
USER_FK_ID_OWNER_TRANSACTION integer NOT NULL, 
TRANSACTION_DATE  timestamp,
TRANSACTION_SUM double,
TRANSACTION_FEE double,
TRANSACTION_SUM_FINAL double,
TRANSACTION_DESCRIPTION text,
FOREIGN KEY (USER_FK_ID_TRANSACTION) REFERENCES user(USER_ID),
FOREIGN KEY (USER_FK_ID_OWNER_TRANSACTION) REFERENCES user(USER_ID)
);

insert into user (USER_ID, USER_NAME, USER_MAIL, USER_PASSWORD) values (1, 'toto','toto@mail.fr', '123456');
insert into user (USER_ID, USER_NAME, USER_MAIL, USER_PASSWORD) values (2, 'tata','tata@mail.fr', '123456');
insert into user (USER_ID, USER_NAME, USER_MAIL, USER_PASSWORD) values (3, 'tutu','tutu@mail.fr', '123456');

insert into relation(RELATION_ID, USER_FK_ID_OWNER_RELATION, USER_FK_ID_RELATION) values (1,1,2);
insert into relation(RELATION_ID, USER_FK_ID_OWNER_RELATION, USER_FK_ID_RELATION) values (2,2,3);
insert into relation(RELATION_ID, USER_FK_ID_OWNER_RELATION, USER_FK_ID_RELATION) values (3,1,3);

INSERT INTO transaction(TRANSACTION_ID, USER_FK_ID_TRANSACTION, USER_FK_ID_OWNER_TRANSACTION, TRANSACTION_DATE, TRANSACTION_SUM, TRANSACTION_FEE, TRANSACTION_SUM_FINAL, TRANSACTION_DESCRIPTION) VALUES (1, 1, 2, '2021-09-29 10:17:14', 10.00, 15.00, 5.00, 'description');
INSERT INTO transaction(TRANSACTION_ID, USER_FK_ID_TRANSACTION, USER_FK_ID_OWNER_TRANSACTION, TRANSACTION_DATE, TRANSACTION_SUM, TRANSACTION_FEE, TRANSACTION_SUM_FINAL, TRANSACTION_DESCRIPTION) VALUES (2, 1, 3, '2020-12-31 00:00:00', 150.00, 10.00, 2.00, 'description');
INSERT INTO transaction(TRANSACTION_ID, USER_FK_ID_TRANSACTION, USER_FK_ID_OWNER_TRANSACTION, TRANSACTION_DATE, TRANSACTION_SUM, TRANSACTION_FEE, TRANSACTION_SUM_FINAL, TRANSACTION_DESCRIPTION) VALUES (3, 2, 1, '2021-09-29 10:17:14', 20.00, 3.00, 5.00, 'description');
INSERT INTO transaction(TRANSACTION_ID, USER_FK_ID_TRANSACTION, USER_FK_ID_OWNER_TRANSACTION, TRANSACTION_DATE, TRANSACTION_SUM, TRANSACTION_FEE, TRANSACTION_SUM_FINAL, TRANSACTION_DESCRIPTION) VALUES (4, 3, 2, '2021-09-29 10:17:14', 30.00, 15.00, 5.00, 'description');


insert into sold(SOLD_ID, USER_FK_ID_SOLD, SOLD_SUM) values (1,1,30);
insert into sold(SOLD_ID, USER_FK_ID_SOLD, SOLD_SUM) values (2,2,40);
insert into sold(SOLD_ID, USER_FK_ID_SOLD, SOLD_SUM) values (3,3,50);

insert into transaction(TRANSACTION_ID, USER_FK_ID_TRANSACTION, USER_FK_ID_OWNER_TRANSACTION, TRANSACTION_DATE, TRANSACTION_SUM, TRANSACTION_FEE, TRANSACTION_SUM_FINAL, TRANSACTION_DESCRIPTION) values (3,3,50);


commit;

create table relation(
RELATION_ID integer PRIMARY KEY AUTO_INCREMENT,
USER_FK_ID_RELATION integer NOT NULL,
USER_FK_ID_OWNER_RELATION integer NOT NULL, 
RELATION_USER_MAIL varchar(250) NOT NULL,
FOREIGN KEY (USER_FK_ID_RELATION) REFERENCES user(USER_ID),
FOREIGN KEY (USER_FK_ID_OWNER_RELATION) REFERENCES user(USER_ID)
);